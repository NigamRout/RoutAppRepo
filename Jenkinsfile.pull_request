@Library('supply-chain-ci-libraries') _

node {

    deleteDir()

    stage('checkout') {
        git branch: params.ghprbTargetBranch, credentialsId: 'returns_pipeline', url: 'git@github.wsgc.com:Supply-Chain/CareCenterUI.git'
        def pullRequestBranch = "tmp/ccui_PR-${params.ghprbPullId}"
        sh "git fetch origin pull/${params.ghprbPullId}/head:${pullRequestBranch}"
        sh "git checkout ${pullRequestBranch}"
        sh "git merge ${params.ghprbTargetBranch}"
	sh "echo Hello World"
    }

    stage('build') {
        dir("omsui") {
            sh "${tool 'maven3.3.9'}/bin/mvn clean install -Dnpm.test.type='test:ci'"
        }
    }

    stage('SonarQube analysis') {
        try {
            dir("omsui") {
                withCredentials([[$class: 'StringBinding', credentialsId: 'GitHubOAuthToken', variable: 'GITHUB_OAUTH_TOKEN']]) {
                    sh "${tool 'SonarQube_Scanner_2.8'}/bin/sonar-scanner " +
                            "-Dsonar.analysis.mode=preview " +
                            "-Dsonar.host.url=${params.sonarHostUrl} " +
                            "-Dsonar.github.repository=Supply-Chain/CareCenterUI " +
                            "-Dsonar.github.oauth=$GITHUB_OAUTH_TOKEN " +
                            "-Dsonar.github.pullRequest=${params.ghprbPullId}"
                }
            }
        } catch (exception) {
            println exception
            emailNotifications.notifySonarIssue()
        }
    }
}
